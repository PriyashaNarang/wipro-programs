#EXERCISES
"""Q1. Perform Exploratory Data Analysis for the dataset Mall_Customers. 
The dataset can be downloaded from https://www.kaggle.com/datasets"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
df=pd.read_csv('Mall_Customers.csv')
print("Statistical Summary")
print(df.describe())
print("Count plot for Gender")
sns.countplot(df.Genre)
plt.show()
print("Pie Chart for Gender")
df.Genre.value_counts().plot(kind='pie')
plt.show()
print("Bar Chart for Gender")
df.Genre.value_counts().plot(kind='bar')
plt.show()
print("Distribution plots for numerical columns")
sns.displot(df.Age,kde=True)
plt.show()
sns.displot(df["Annual Income (k$)"],kde=True)
plt.show()
sns.displot(df["Spending Score (1-100)"],kde=True)
plt.show()
print("Pairplot")
sns.pairplot(df,hue="Genre")
plt.show()
print("Heatmap")
sns.heatmap(df.iloc[:,[2,3,4]].corr(),annot=True)
plt.show()
print("Boxplot")
sns.boxplot(x="Annual Income (k$)",y="Spending Score (1-100)",data=df)
plt.show()
print("Scatter Pair Grid")
sns.PairGrid(df).map(plt.scatter)
plt.show()
print("Different charts for Pair Grid")
req=sns.PairGrid(df)
req.map_diag(sns.histplot)
req.map_lower(sns.scatterplot)
req.map_upper(sns.kdeplot)
plt.show()
data2=pd.get_dummies(df.Genre)
data2.replace([True,False],[1,0],inplace=True)
reqdataset=pd.concat([data2,df.iloc[:,[0,2,3,4]]],axis=1)
print(reqdataset)
print("HeatMap")
plt.figure(figsize=(10,10))
sns.heatmap(reqdataset.corr(),annot=True,linewidth=2)
plt.show()
print("Scatter Plot")
sns.scatterplot(x='Annual Income (k$)',y='Spending Score (1-100)',hue='Genre',data=df,)
plt.show()
print("Scatter Plot 2")
sns.scatterplot(x='Age',y='Annual Income (k$)',hue='Genre',data=df,)
plt.show()

"""Q2. Perform Exploratory Data Analysis for the dataset salary_data.
The dataset can be downloaded from https://www.kaggle.com/datasets"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
df=pd.read_csv('Salary_Data.csv')
print("Statistical Summary")
print(df.describe())
print("Count plot for Gender")
sns.countplot(df.Gender)
plt.show()
print("Pie Chart for Gender")
df.Gender.value_counts().plot(kind='pie')
plt.show()
print("Bar Chart for Gender")
df.Gender.value_counts().plot(kind='bar')
plt.show()
df.replace(["Bachelor's Degree","Master's Degree","phD"],["Bachelor's","Master's","PhD"],inplace=True)
print("Count plot for Education Level")
sns.countplot(df["Education Level"])
plt.show()
print("Pie Chart for Education Level")
df["Education Level"].value_counts().plot(kind='pie')
plt.show()
print("Bar Chart for Education Level")
df["Education Level"].value_counts().plot(kind='bar')
plt.show()
print("Distribution plots for numerical columns")
sns.displot(df.Age,kde=True)
plt.show()
sns.displot(df["Years of Experience"],kde=True)
plt.show()
sns.displot(df.Salary,kde=True)
plt.show()
print("Pairplot")
sns.pairplot(df)
plt.show()
print("Pairplot-Education Level")
sns.pairplot(df,hue="Education Level")
plt.show()
print("Pairplot-Gender")
sns.pairplot(df,hue="Gender")
plt.show()
dupdata1=pd.get_dummies(df.Gender)
dupdata1.replace([True,False],[1,0],inplace=True)
dupdata2=pd.get_dummies(df["Education Level"])
dupdata2.replace([True,False],[1,0],inplace=True)
reqdata1=pd.concat([dupdata2,dupdata2],axis=1)
wholedata=pd.concat([reqdata1,df.iloc[:,[0,4,5]]],axis=1)
print("HeatMap")
sns.heatmap(wholedata.corr(),annot=True,linewidth=2)
plt.show()
print("Boxplot")
sns.boxplot(x="Years of Experience",y="Salary",data=df,)
plt.show()
print("Scatter Pair Grid-Gender")
var1=sns.PairGrid(df,hue="Gender")
var1.map(plt.scatter).add_legend()
plt.show()
print("Scatter Pair Grid-Education Level")
var2=sns.PairGrid(df,hue="Education Level")
var2.map(plt.scatter).add_legend()
plt.show()
print("Scatter Plot1-Gender")
sns.scatterplot(x='Years of Experience',y='Salary',hue='Gender',data=df,)
plt.show()
print("Scatter Plot2-Gender")
sns.scatterplot(x='Age',y='Salary',hue='Gender',data=df,)
plt.show()
print("Scatter Plot1-Education Level")
sns.scatterplot(x='Years of Experience',y='Salary',hue='Education Level',data=df,)
plt.show()
print("Scatter Plot2-Education Level")
sns.scatterplot(x='Age',y='Salary',hue='Education Level',data=df,)
plt.show()

"""Q3. Perform Exploratory Data Analysis for the dataset Social Network Ads.
The dataset can be downloaded from https://www.kaggle.com/datasets"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
df=pd.read_csv('Social_Network_Ads.csv')
print("Statistical Summary")
print(df.describe())
print("Distribution plots for numerical columns")
sns.displot(df.Age,kde=True)
plt.show()
sns.displot(df.EstimatedSalary,kde=True)
plt.show()
sns.displot(df.Purchased,kde=True)
plt.show()
print("Pairplot")
sns.pairplot(df)
plt.show()
print("Joint Plot Age VS EstimatedSalary")
sns.jointplot(x=df.Age,y=df.EstimatedSalary,kind='hex')
plt.show()
print("Joint Plot Purchased VS EstimatedSalary")
sns.jointplot(x=df.Purchased,y=df.EstimatedSalary,kind='reg')
plt.show()
print("HeatMap")
plt.figure(figsize=(5,5))
sns.heatmap(df.corr(),annot=True,linewidth=1)
plt.show()
print("Boxplot")
sns.boxplot(x="Purchased",y="EstimatedSalary",data=df,)
plt.show()
print("Scatter Pair Grid")
var1=sns.PairGrid(df,hue="Purchased")
var1.map(plt.scatter).add_legend()
plt.show()
print("Scatter Pair Grid with different Charts")
var1=sns.PairGrid(df,hue="Purchased")
var1.map_diag(sns.histplot)
var1.map_lower(sns.scatterplot)
var1.map_upper(sns.barplot)
plt.show()
print("Bar Chart based on Purchased")
df.Purchased.value_counts().plot(kind='bar')
plt.show()
print("Pie Chart based on Purchased")
df.Purchased.value_counts().plot(kind='pie')
plt.show()
print("ScatterPlot")
sns.scatterplot(x="Age",y="EstimatedSalary",hue="Purchased",data=df,)
plt.show()